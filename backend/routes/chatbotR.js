const express = require("express");
const router = express.Router();
const Forum = require("../models/Forum"); // Mod√®le des groupes de soutien

// Route API appel√©e par le frontend quand l'utilisateur envoie un message
router.post("/ask", async (req, res) => {
  const { message } = req.body; // R√©cup√©ration du message depuis le frontend

  try {
    // Mots-cl√©s que le chatbot peut reconna√Ætre
    const keywords = ["cancer", "mental", "heart", "diabetes"];
    const messageLower = message.toLowerCase(); // On convertit en miniscule le message   pour eviter les erreur

    // Cherche un mot-cl√© pr√©sent dans le message
    const matchedKeyword = keywords.find((keyword) =>
      messageLower.includes(keyword)
    );

    if (matchedKeyword) {
      // Recherche dans MongoDB un groupe contenant ce mot-cl√©
      const forum = await Forum.findOne({
        name: { $regex: matchedKeyword, $options: "i" }, //$options: "i" = "insensitive" ‚Üí casse ignor√©e
      });
      //regex  C‚Äôest une expression r√©guli√®re (Regular Expression) = un outil puissant pour chercher un mot dans une cha√Æne.
      if (!forum) {
        // Si aucun groupe trouv√© correspondant au mot-cl√©
        return res.json({
          response:
            "üôè Merci pour votre message. Aucun groupe trouv√©, mais nous sommes l√† pour vous aider.",
          group: null,
          groupId: null,
          link: null,
        });
      }

      // Si un groupe est trouv√©, on cr√©e un lien pour y acc√©der
      const link = `http://localhost:3000/group-chat/${forum._id}`;

      // R√©ponse envoy√©e au frontend (chatbot)
      return res.json({
        response: `‚ù§Ô∏è Merci pour votre message. Vous n'√™tes pas seul. Nous vous invitons √† rejoindre notre groupe de soutien **${forum.name}**.`,
        group: forum.name,
        groupId: forum._id,
        link,
      });
    }

    // Si aucun mot-cl√© d√©tect√©
    res.json({
      response:
        "üôè Merci pour votre message. Nous n'avons pas identifi√© de groupe correspondant, mais nous sommes l√† pour vous soutenir.",
      group: null,
      groupId: null,
      link: null,
    });
  } catch (error) {
    console.error("‚ùå Mock Chatbot error:", error.message);
    res.status(500).json({ message: "Erreur serveur c√¥t√© chatbot." });
  }
});

module.exports = router;
